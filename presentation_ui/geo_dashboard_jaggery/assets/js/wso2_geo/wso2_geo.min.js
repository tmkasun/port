var ApplicationOptions={colors:{states:{NORMAL:"blue",WARNING:"orange",OFFLINE:"grey",ALERTED:"red",UNKNOWN:"black"},application:{header:"grey"}},constance:{SPEED_HISTORY_COUNT:20,NOTIFY_INFO_TIMEOUT:1E3,NOTIFY_SUCCESS_TIMEOUT:1E3,NOTIFY_WARNING_TIMEOUT:3E3,NOTIFY_DANGER_TIMEOUT:5E3},messages:{app:{}},leaflet:{iconUrls:{normalIcon:"assets/img/markers/arrow_normal.png",alertedIcon:"assets/img/markers/arrow_alerted.png",offlineIcon:"assets/img/markers/arrow_offline.png",warningIcon:"assets/img/markers/arrow_warning.png",
defaultIcon:"assets/img/markers/default_icons/marker-icon.png",resizeIcon:"assets/img/markers/resize.png"}}};var debugObject,showPathFlag=!1,currentSpatialObjects={},selectedSpatialObject,webSocketURL=ApplicationOptions.constance.WEB_SOCKET_URL,websocket,waitTime=1E3;
function waitForSocketConnection(a,b){setTimeout(function(){1===a.readyState?(initializeWebSocket(),waitTime=1E3,console.log("Connection is made"),null!=b&&b()):(websocket=new WebSocket(webSocketURL),waitTime+=400,$.UIkit.notify({message:"wait for connection "+waitTime/1E3+" Seconds...",status:"warning",timeout:waitTime,pos:"top-center"}),waitForSocketConnection(websocket,b))},waitTime)}
var webSocketOnOpen=function(){$.UIkit.notify({message:"You Are Connectedto Map Server!!",status:"success",timeout:ApplicationOptions.constance.NOTIFY_SUCCESS_TIMEOUT,pos:"top-center"})},webSocketOnError=function(a){$.UIkit.notify({message:"Something went wrong when trying to connect to <b>"+webSocketURL+"<b/>",status:"danger",timeout:ApplicationOptions.constance.NOTIFY_DANGER_TIMEOUT,pos:"top-center"})},webSocketOnClose=function(a){$.UIkit.notify({message:"Connection lost with server!!",status:"danger",
timeout:ApplicationOptions.constance.NOTIFY_DANGER_TIMEOUT,pos:"top-center"});waitForSocketConnection(websocket)},webSocketOnMessage=function(a){a=$.parseJSON(a.data);if(a.id in currentSpatialObjects)currentSpatialObjects[a.id].update(a);else{var b=new SpatialObject(a);b.update(a);currentSpatialObjects[b.id]=b;currentSpatialObjects[b.id].addTo(map)}};
function initializeWebSocket(){websocket=new WebSocket(webSocketURL);websocket.onmessage=webSocketOnMessage;websocket.onclose=webSocketOnClose;websocket.onerror=webSocketOnError;websocket.onopen=webSocketOnOpen}initializeWebSocket();
var normalIcon=L.icon({iconUrl:ApplicationOptions.leaflet.iconUrls.normalIcon,shadowUrl:!1,iconSize:[24,24],iconAnchor:[12,12],popupAnchor:[-2,-5]}),alertedIcon=L.icon({iconUrl:ApplicationOptions.leaflet.iconUrls.alertedIcon,shadowUrl:!1,iconSize:[24,24],iconAnchor:[12,12],popupAnchor:[-2,-5]}),offlineIcon=L.icon({iconUrl:ApplicationOptions.leaflet.iconUrls.offlineIcon,iconSize:[24,24],iconAnchor:[12,12],popupAnchor:[-2,-5]}),warningIcon=L.icon({iconUrl:ApplicationOptions.leaflet.iconUrls.warningIcon,
iconSize:[24,24],iconAnchor:[12,12],popupAnchor:[-2,-5]}),defaultIcon=L.icon({iconUrl:ApplicationOptions.leaflet.iconUrls.defaultIcon,iconSize:[24,24],iconAnchor:[12,12],popupAnchor:[-2,-5]});
function SpatialObject(a){this.id=a.id;this.pathGeoJsons=[];this.path=[];this.speedHistory=new LocalStorageArray(this.id);this.geoJson=L.geoJson(a,{pointToLayer:function(a,c){return L.marker(c,{icon:normalIcon,iconAngle:this.heading})}});this.marker=this.geoJson.getLayers()[0];this.marker.options.title=this.id;this.popupTemplate=$("#markerPopup");this.marker.bindPopup(this.popupTemplate.html());return this}
SpatialObject.prototype.createLineStringFeature=function(a,b,c){return{type:"Feature",properties:{state:a,information:b},geometry:{type:"LineString",coordinates:[c]}}};SpatialObject.prototype.addTo=function(a){this.geoJson.addTo(a)};SpatialObject.prototype.setSpeed=function(a){this.speed=a;this.speedHistory.push(a);this.speedHistory.length>ApplicationOptions.constance.SPEED_HISTORY_COUNT&&this.speedHistory.splice(1,1)};
SpatialObject.prototype.stateIcon=function(){switch(this.state){case "NORMAL":return normalIcon;case "ALERTED":return alertedIcon;case "OFFLINE":return offlineIcon;case "WARNING":return warningIcon;default:return defaultIcon}};SpatialObject.prototype.updatePath=function(a){this.path[this.path.length-1].addLatLng(a)};
SpatialObject.prototype.drawPath=function(){var a=[];0<this.path.length&&this.removePath();for(var b in this.pathGeoJsons)if(this.pathGeoJsons.hasOwnProperty(b)){var c=new L.polyline(this.pathGeoJsons[b].geometry.coordinates,this.getSectionStyles(this.pathGeoJsons[b].properties.state)),d=this.pathGeoJsons[b].geometry.coordinates[0];console.log("DEBUG: previousSectionLastPoint = "+a+" currentSectionFirstPoint = "+d);a.push(d);d=new L.polyline(a,this.getSectionStyles());d.setStyle({className:"sectionJointStyle"});
a=[this.pathGeoJsons[b].geometry.coordinates[this.pathGeoJsons[b].geometry.coordinates.length-1]];d.addTo(map);this.path.push(d);console.log("DEBUG: Alert Information: "+this.pathGeoJsons[b].properties.information);c.bindPopup("Alert Information: "+this.pathGeoJsons[b].properties.information);c.addTo(map);this.path.push(c)}};SpatialObject.prototype.removePath=function(){for(var a in this.path)this.path.hasOwnProperty(a)&&map.removeLayer(this.path[a]);this.path=[]};
SpatialObject.prototype.getSectionStyles=function(a){switch(a){case "NORMAL":a=ApplicationOptions.colors.states.NORMAL;break;case "ALERTED":a=ApplicationOptions.colors.states.ALERTED;break;case "WARNING":a=ApplicationOptions.colors.states.WARNING;break;case "OFFLINE":a=ApplicationOptions.colors.states.OFFLINE;break;default:return{color:ApplicationOptions.colors.states.UNKNOWN,weight:8}}return{color:a,weight:8}};
SpatialObject.prototype.update=function(a){this.latitude=a.geometry.coordinates[1];this.longitude=a.geometry.coordinates[0];this.setSpeed(a.properties.speed);this.state=a.properties.state;this.heading=a.properties.heading;this.information=a.properties.information;if(a.properties.notify){"NORMAL"!=this.state&&notifyAlert("Object ID: <span style='color: blue;cursor: pointer' onclick='focusOnSpatialObject("+this.id+")'>"+this.id+"</span> change state to: <span style='color: red'>"+a.properties.state+
"</span> Info : "+a.properties.information);var b=this.createLineStringFeature(this.state,this.information,[this.latitude,this.longitude]);this.pathGeoJsons.push(b);if(selectedSpatialObject==this.id){var c=new L.polyline(b.geometry.coordinates,this.getSectionStyles(a.properties.state));c.bindPopup("Alert Information: "+b.properties.information);b=this.path[this.path.length-1].getLatLngs();b=new L.polyline([b[b.length-1],[this.latitude,this.longitude]],this.getSectionStyles());b.setStyle({className:"sectionJointStyle"});
this.path.push(b);this.path.push(c);b.addTo(map);c.addTo(map)}}this.marker.setLatLng([this.latitude,this.longitude]);this.marker.setIconAngle(this.heading);this.marker.setIcon(this.stateIcon());0<this.pathGeoJsons.length?this.pathGeoJsons[this.pathGeoJsons.length-1].geometry.coordinates.push([a.geometry.coordinates[1],a.geometry.coordinates[0]]):(b=this.createLineStringFeature(this.state,this.information,[a.geometry.coordinates[1],a.geometry.coordinates[0]]),this.pathGeoJsons.push(b));selectedSpatialObject==
this.id&&(this.updatePath([a.geometry.coordinates[1],a.geometry.coordinates[0]]),chart.load({columns:[this.speedHistory.getArray()]}),map.setView([this.latitude,this.longitude]));this.popupTemplate.find("#objectId").html(this.id);this.popupTemplate.find("#information").html(this.information);this.popupTemplate.find("#speed").html(this.speed);this.popupTemplate.find("#heading").html(this.heading);this.marker.setPopupContent(this.popupTemplate.html())};
function notifyAlert(a){$.UIkit.notify({message:"Alert: "+a,status:"warning",timeout:ApplicationOptions.constance.NOTIFY_WARNING_TIMEOUT,pos:"bottom-left"})}function Alert(a,b,c){this.type=a;this.message=b;this.level=c?c:"info";this.notify=function(){$.UIkit.notify({message:this.level+": "+this.type+" "+this.message,status:"info",timeout:ApplicationOptions.constance.NOTIFY_INFO_TIMEOUT,pos:"bottom-left"})}}
function LocalStorageArray(a){if("undefined"===typeof sessionStorage)return["speed"];if(void 0===a)throw"Should provide an id to create a local storage!";this.storageId=a;sessionStorage.setItem(a,"speed");this.getArray=function(){return sessionStorage.getItem(this.storageId).split(",")};this.length=this.getArray().length;this.push=function(a){var c=sessionStorage.getItem(this.storageId);sessionStorage.setItem(this.storageId,null===c?a:c+","+a);this.length+=1};this.isEmpty=function(){return 0===this.getArray().length};
this.splice=function(a,c){var d=this.getArray();d.splice(a,c);sessionStorage.setItem(this.storageId,d.toString());this.length-=c}};function addTileUrl(){var a=$("#tileUrl").val(),b=$("#tileName").val(),c=$("#maxzoom").val();subdomains=$("#sub_domains").val();var d=$("#data_attribution").val(),f=L.tileLayer(a,{maxZoom:parseInt(c),subdomains:subdomains.split(","),attribution:d});layerControl.addBaseLayer(f,b);inputs=layerControl._form.getElementsByTagName("input");inputsLen=inputs.length;for(i=0;i<inputsLen;i++)input=inputs[i],obj=layerControl._layers[input.layerId],layerControl._map.hasLayer(obj.layer)&&map.removeLayer(obj.layer);
map.addLayer(f);$.post("controllers/tile_servers.jag",{url:a,name:b,attribution:d,maxzoom:c,subdomains:subdomains},function(a){$.UIkit.notify({message:'<span style="color: dodgerblue">'+a+"</span>",status:"success",timeout:ApplicationOptions.constance.NOTIFY_SUCCESS_TIMEOUT,pos:"top-center"});closeAll()})}
var defaultOSM=L.tileLayer("http://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png",{maxZoom:19,attribution:'Map data \u00a9 OpenStreetMap contributors <a href="http://openstreetmap.org/" target="_blank">Openstreetmap</a> <img src="http://developer.mapquest.com/content/osm/mq_logo.png">. Map data (c) <a href="http://www.openstreetmap.org/" target="_blank">OpenStreetMap</a> contributors, CC-BY-SA.'}),baseLayers={"Open Street Maps":defaultOSM};
function getTileServers(){$.getJSON("controllers/tile_servers.jag?serverId=all",function(a){$.each(a,function(a,c){$.UIkit.notify({message:'Loading... <span style="color: #ccfcff">'+c.name+'</span> URL: <span style="color: #00ff00">'+c.url+"</span>",status:"info",timeout:ApplicationOptions.constance.NOTIFY_INFO_TIMEOUT,pos:"bottom-left"});var d=L.tileLayer(c.url,{maxZoom:c.maxzoom,subdomains:c.subdomains.split(","),attribution:c.attribution});layerControl.addBaseLayer(d,c.name)})})}
function addWmsEndPoint(){serviceName=$("#serviceName").val();layers=$("#layers").val();wmsVersion=$("#wmsVersion").val();serviceEndPoint=$("#serviceEndPoint").val();outputFormat=$("#outputFormat").val();wmsLayer=L.tileLayer.wms(serviceEndPoint,{layers:layers.split(","),format:outputFormat?outputFormat:"image/png",transparent:!0,opacity:.4});layerControl.addOverlay(wmsLayer,serviceName,"Web Map Service layers");map.addLayer(wmsLayer);$.post("controllers/wms_endpoints.jag",{serviceName:serviceName,
layers:layers,wmsVersion:wmsVersion,serviceEndPoint:serviceEndPoint,outputFormat:outputFormat},function(a){$.UIkit.notify({message:'<span style="color: dodgerblue">'+a+"</span>",status:"success",timeout:ApplicationOptions.constance.NOTIFY_SUCCESS_TIMEOUT,pos:"top-center"});closeAll()})}
function getWms(){$.getJSON("controllers/wms_endpoints.jag?serverId=all",function(a){$.each(a,function(a,c){wmsLayer=L.tileLayer.wms(c.serviceUrl,{layers:c.layers.split(","),format:c.format?c.format:"image/png",version:c.version,transparent:!0,opacity:.4});layerControl.addOverlay(wmsLayer,c.name,"Web Map Service layers")})})}
function setSpeedAlert(){var a=$("#speedAlertValue").val();data={parseData:JSON.stringify({speedAlertValue:a}),executionPlan:"speed",customName:null,cepAction:"edit"};$.post("controllers/set_alerts.jag",data,function(a){$.UIkit.notify({message:'<span style="color: dodgerblue">'+a.status+"</span><br>"+a.message,status:"success"==a.status?"success":"danger",timeout:3E3,pos:"top-center"});closeAll()},"json")}
function setWithinAlert(a){var b=JSON.stringify(map._layers[a].toGeoJSON().geometry).replace(/"/g,"'"),c=$("#queryName").val(),d=$("#areaName").val(),b={parseData:JSON.stringify({geoFenceGeoJSON:b,executionPlanName:createExecutionPlanName(c),areaName:d}),executionPlan:"within",customName:d,queryName:c,cepAction:"deploy"};$.post("controllers/set_alerts.jag",b,function(b){$.UIkit.notify({message:'<span style="color: dodgerblue">'+b.status+"</span><br>"+b.message,status:"success"==b.status?"success":
"danger",timeout:3E3,pos:"top-center"});closeAll();closeWithinTools(a)},"json")}function removeGeoFence(a){var b=$(a).attr("data-queryName");$(a).attr("data-areaName");data={executionPlanName:createExecutionPlanName(b),queryName:b,cepAction:"undeploy"};$.post("controllers/remove_alerts.jag",data,function(a){$.UIkit.notify({message:'<span style="color: dodgerblue">'+a.status+"</span><br>"+a.message,status:"success"==a.status?"success":"danger",timeout:3E3,pos:"top-center"});closeAll()},"json")}
function getAlertsHistory(a){$.getJSON("controllers/get_alerts_history.jag?objectId="+a,function(a){var c=$("#showAlertsArea").empty();$.each(a,function(a,b){var e=document.createElement("a");switch(b.state){case "NORMAL":return;case "WARNING":$(e).addClass("list-group-item list-group-item-warning");break;case "ALERTED":$(e).addClass("list-group-item list-group-item-danger");break;case "OFFLINE":$(e).addClass("list-group-item list-group-item-success")}$(e).html(b.information);$(e).css({marginTop:"5px"});
$(e).attr("onClick","showAlertInMap(this)");$(e).attr("data-id",b.id);$(e).attr("data-latitude",b.latitude);$(e).attr("data-longitude",b.longitude);$(e).attr("data-state",b.state);$(e).attr("data-information",b.information);c.append(e)})})}
function setProximityAlert(){var a=$("#proximityDistance").val(),b=$("#proximityTime").val(),a={parseData:JSON.stringify({proximityTime:b,proximityDistance:a}),executionPlan:"proximity",customName:null,cepAction:"edit"};$.post("controllers/set_alerts.jag",a,function(a){$.UIkit.notify({message:'<span style="color: dodgerblue">'+a.status+"</span><br>"+a.message,status:"success"==a.status?"success":"danger",timeout:3E3,pos:"top-center"});closeAll()},"json")}
function createExecutionPlanName(a){return"geo_within"+(a?"_"+a:"")+"_alert"}function closeAll(){$(".modal").modal("hide");setTimeout(function(){$.UIkit.offcanvas.hide()},100)};var drawControl;
function openWithinTools(){closeAll();$.UIkit.notify({message:"Please draw the required area on the map",status:"success",timeout:ApplicationOptions.constance.NOTIFY_SUCCESS_TIMEOUT,pos:"top-center"});L.Control.RemoveAll=L.Control.extend({options:{position:"topleft"},onAdd:function(a){var d=L.DomUtil.create("div","leaflet-draw-toolbar leaflet-bar");L.DomEvent.addListener(d,"click",L.DomEvent.stopPropagation).addListener(d,"click",L.DomEvent.preventDefault).addListener(d,"click",function(){d.remove();drawControl.removeFrom(a);
b.clearLayers()});var f=L.DomUtil.create("a","fa fa-times fa-lg drawControlCloseButton",d);$(f).css("background-image","none");$(f).mouseenter(function(){$(this).css("color","red")}).mouseleave(function(){$(this).css("color","black")});f.title="Close drawer tools";f.href="#";return d}});var a=new L.Control.RemoveAll;map.addControl(a);var b=new L.FeatureGroup;map.addLayer(b);drawControl=new L.Control.Draw({draw:{polygon:{allowIntersection:!1,drawError:{color:"#e1e100",message:"<strong>Oh snap!<strong> you can't draw that!"},
shapeOptions:{color:"#ff0043"}},rectangle:{shapeOptions:{color:"#002bff"}},polyline:!1,circle:!1,marker:!1},edit:{featureGroup:b}});map.addControl(drawControl);map.on("draw:created",function(a){a=a.layer;b.addLayer(a);createPopup(a)})}
function createPopup(a){var b=$("#setWithinAlert");b.find("#exportGeoJson").attr("leaflet_id",a._leaflet_id);b.find("#editGeoJson").attr("leaflet_id",a._leaflet_id);b.find("#addWithinAlert").attr("leaflet_id",a._leaflet_id);a.bindPopup(b.html(),{closeOnClick:!1,closeButton:!1}).openPopup();$(a._popup._container.childNodes[0]).css("background","rgba(255,255,255,0.8)")}
function closeWithinTools(a){map.removeLayer(map._layers[a]);map.removeControl(drawControl);console.log("DEBUG: closeWithinTools(leafletId) = "+a)}function exportToGeoJSON(a,b){var c="data:application/json;charset=utf-8,"+encodeURIComponent(b),d=$(a).closest("form").find("#areaName").val()||"geoJson";$(a).attr({href:c,target:"_blank",download:d+".json"})}$(function(){$("#importGeoJsonFile").change(function(){var a=this.files[0],b=new FileReader;b.readAsText(a);b.onload=function(a){$("#enterGeoJson").text(a.target.result.toString())}})});
function importGeoJson(){var a;a=$("#enterGeoJson").val();updateDrawing(a)}function updateDrawing(a){a=JSON.parse(a);a.geometry.coordinates[0].pop();var b=[];$.each(a.geometry.coordinates[0],function(a,d){b.push({lat:d[1],lng:d[0]})});a=new L.Polygon(b);a.editing.enable();map.addLayer(a);createPopup(a);closeAll()}
function viewFence(a){var b=JSON.parse($(a).attr("data-geoJson")),c=$(a).attr("data-queryName"),d=$(a).attr("data-areaName");b.coordinates[0].pop();var f=[];$.each(b.coordinates[0],function(a,b){f.push({lat:b[1],lng:b[0]})});var e=new L.Polygon(f);map.addLayer(e);$("#templateLoader").load("assets/html_templates/view_fence_popup.html #viewWithinAlert",function(){var a=$("#templateLoader").find("#viewWithinAlert");a.find("#exportGeoJson").attr("leaflet_id",e._leaflet_id);a.find("#hideViewFence").attr("leaflet_id",
e._leaflet_id);a.find("#viewAreaName").html(d);a.find("#viewQueryName").html(c);e.bindPopup(a.html(),{closeButton:!1}).openPopup();$(e._popup._container.childNodes[0]).css("background","rgba(255,255,255,0.8)");closeAll()})};function showAlertInMap(a){clearFocus();var b=$(a).attr("data-id"),c=$(a).attr("data-latitude"),d=$(a).attr("data-longitude"),f=$(a).attr("data-state");a=$(a).attr("data-information");var c=L.latLng(c,d),e=L.circle(c,10,{color:"#FF9900",fillColor:"#FF00FF",fillOpacity:.5}).addTo(map);e.bindPopup("Id: <b>"+b+"</b><br>State: <b>"+f+"</b><br>Information: <b>"+a+"</b><br>").openPopup();$(e._popup._closeButton).on("click",function(){map.removeLayer(e)});map.setView(c,18)};
